0.5	// 0 double beta; // отношение энергии оптического фонона к ширине минизоны
0.1	// 1 double wla_max; // константа электрон-фононного взаимодействия (акустические фононы)
0.1	// 2 double wlo_max; // константа электрон-фононного взаимодействия (оптические фононы)
0	// 3 double Exc;     // постоянная составляющая электрического поля вдоль оси Ox
0	// 4 double Ex;      // амплитуда переменной составляющей электрического поля вдоль оси Ох
0	// 5 double Eyc;     // постоянная составляющая электрического поля вдоль оси Oу
0	// 6 double Ey;      // амплитуда переменной составляющей электрического поля вдоль оси Оy
0	// 7 double H;       // напряженность магнитного поля, перпендикулярного к поверхности образца 
1	// 8 double vx0;     // коэффициент в выражении для компоненты скорости (1)
1	// 9 double vy0;     // коэффициент в выражении для компоненты скорости (1)
1	// 10 double wx;      // частота электрического поля плоской волны, поляризованной вдоль оси Ох 
1	// 11 double wy;		// частота электрического поля плоской волны, поляризованной вдоль оси Оу
1	// 12 double wy1;
2	// 13 double wy2;
3.14159	// 14 double phi;		// относительная фаза волны, поляризованной вдоль оси Оу, по сравнению с волной, поляризованной вдоль оси Ох
30	// 15 double Ey1;
20	// 16 double Ey2;
200	// 17 int Nx;         // количество точек, на которые разбивается первая зона Бриллюэна
200	// 18 int Ny;	
3.14159	// 19 double px_max;  // максимальное значение компонент квазиимпульса
3.14159	// 20 double py_max;
0	// 21 double Ax;      // координаты вершин параллелограмма, ограничивающего первую зону Бриллюэна
3.14159	// 22 double Ay;
3.14159	// 23 double Bx;
0	// 24 double By;
-3.14159	// 25 double Dx;
0	// 26 double Dy;
5e-06	// 27 double Newton_abs_error; // абсолютная ошибка вычисления корня уравнения при использовании метода Ньютона
2000	// 28 int Newton_n_points;	 // количество элементов, на которое делится отрезок, на котором ищем решение уравнения методом Ньютона
1000	// 29 int Simson_n;    // количество элементов, на которое разбивается область [0..2*Pi] при интегрировании методом Симпсона
0.0002	// 30 double dt;       // шаг по времени при моделировании (важен для метода Рунге-Кутты)
100	// 31 double all_time; // время всего моделирования
120	// 32 int num_threads_openmp; // количество ядер, на которое распараллеливается расчет вероятности рассеяния и расчет среднего значения плотности тока
120	// 33 int n_part; // количество частиц n_part
0.5	// 34 double T;		//Температура
0	// 35 double low; // Минимальное значение переменной, от которой строим график
30	// 36 double high; // Максимальное значение переменной, от которой строим график
3	// 37 double step; // Шаг изменения переменной, в зависимости от которой строим график
15	// 38 int num_var; // Номер переменной, в зависимости от которой строим график
1	 // если 1, вероятности загружали из файлов
1230	 // общее время расчета для построения графика
