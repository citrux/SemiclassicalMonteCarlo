// 0 double beta; // отношение энергии оптического фонона к ширине минизоны
0.5
// 1 double wla_max; // константа электрон-фононного взаимодействия (акустические фононы)
0.1
// 2 double wlo_max; // константа электрон-фононного взаимодействия (оптические фононы)
0.1
// 3 double Exc;     // постоянная составляющая электрического поля вдоль оси Ox
0.0
// 4 double Ex;      // амплитуда переменной составляющей электрического поля вдоль оси Ох
0.0
// 5 double Eyc;     // постоянная составляющая электрического поля вдоль оси Oу
0.0
// 6 double Ey;      // амплитуда переменной составляющей электрического поля вдоль оси Оy
0.0
// 7 double H;       // напряженность магнитного поля, перпендикулярного к поверхности образца 
0.0
// 8 double vx0;     // коэффициент в выражении для компоненты скорости (1)
1.0
// 9 double vy0;     // коэффициент в выражении для компоненты скорости (1)
1.0
// 10 double wx;      // частота электрического поля плоской волны, поляризованной вдоль оси Ох 
1.0
// 11 double wy;		// частота электрического поля плоской волны, поляризованной вдоль оси Оу
1.0
// 12 double wy1;
1.0
// 13 double wy2;
2.0
// 14 double phi;		// относительная фаза волны, поляризованной вдоль оси Оу, по сравнению с волной, поляризованной вдоль оси Ох
3.1415926
// 15 double Ey1;
0.0
// 16 double Ey2;
20.0
// 17 int Nx;         // количество точек, на которые разбивается первая зона Бриллюэна
200 
// 18 int Ny;	
200
// 19 double px_max;  // максимальное значение компонент квазиимпульса
3.1415926
// 20 double py_max;
3.1415926
// 21 double Ax;      // координаты вершин параллелограмма, ограничивающего первую зону Бриллюэна
0.0
// 22 double Ay;
3.1415926
// 23 double Bx;
3.1415926
// 24 double By;
0.0
// 25 double Dx;
-3.1415926
// 26 double Dy;
0.0
// 27 double Newton_abs_error; // абсолютная ошибка вычисления корня уравнения при использовании метода Ньютона
0.000005
// 28 int Newton_n_points;	 // количество элементов, на которое делится отрезок, на котором ищем решение уравнения методом Ньютона
2000
// 29 int Simson_n;    // количество элементов, на которое разбивается область [0..2*Pi] при интегрировании методом Симпсона
1000
// 30 double dt;       // шаг по времени при моделировании (важен для метода Рунге-Кутты)
0.0005
// 31 double all_time; // время всего моделирования
100.0
// 32 int num_threads_openmp; // количество ядер, на которое распараллеливается расчет вероятности рассеяния и расчет среднего значения плотности тока
120
// 33 int n_part; // количество частиц n_part
240
// 34 double T;		//Температура
0.5
// 35 double low; // Минимальное значение переменной, от которой строим график
0.0
// 36 double high; // Максимальное значение переменной, от которой строим график
30.0
// 37 double step; // Шаг изменения переменной, в зависимости от которой строим график
3.0
// 38 int num_var; // Номер переменной, в зависимости от которой строим график
15
// 39 int flag_count_or_load; // Если 1, загружаем значения вероятностей из файлов, иначе - вычисляем
1